# Spring Boot application name
spring.application.name=sidecar-pattern

# Logging level configuration
logging.level.org.mybatis=INFO
logging.level.jdbc.sqlonly=DEBUG

# DB info
server.port=8080
#spring.datasource.url=jdbc:postgresql://localhost:5433/PracticeDB
spring.datasource.url=jdbc:postgresql://localhost:5432/PracticeDB
spring.datasource.username=postgres
spring.datasource.password=test1234
mybatis.mapper-locations=classpath:mapper/*.xml

# Resilience4j Circuit Breaker configuration
resilience4j.circuitbreaker.instances.departmentService.register-health-indicator=true
resilience4j.circuitbreaker.instances.departmentService.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.departmentService.sliding-window-size=10
resilience4j.circuitbreaker.instances.departmentService.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.departmentService.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.departmentService.wait-duration-in-open-state=10000
resilience4j.circuitbreaker.instances.departmentService.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.departmentService.event-consumer-buffer-size=10

# Resilience4j Circuit Breaker configuration Explanation
#register-health-indicator: 서킷 브레이커의 상태를 Actuator를 통해 노출할지 여부
#sliding-window-type: 슬라이딩 윈도우의 유형 (COUNT_BASED 또는 TIME_BASED)
#sliding-window-size: 슬라이딩 윈도우의 크기 # 서킷 브레이커의 성공 및 실패를 평가
#minimum-number-of-calls: 서킷 브레이커가 계산을 시작하기 위한 최소 호출 수
#permitted-number-of-calls-in-half-open-state: Half-Open 상태에서 허용되는 호출 수
#wait-duration-in-open-state: Open 상태에서 Half-Open 상태로 전환되기 전 대기 시간 (밀리초) # 10 seconds
#failure-rate-threshold: 실패율 임계값 (백분율)
#event-consumer-buffer-size: 이벤트 소비자 버퍼 크기 # 이벤트를 기록하고 모니터링 하는데 사용하는 지표